cmake_minimum_required(VERSION 3.10)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}" ${CMAKE_MODULE_PATH})
project(TensorRTSample LANGUAGES CXX CUDA)

find_package(Torch REQUIRED)
find_package(OpenMP REQUIRED)
find_package(Threads)
find_package(CUDA REQUIRED)
find_package(TensorRT REQUIRED)

IF (OPENMP_FOUND)
    SET(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -Xcompiler=${OpenMP_CXX_FLAGS}")
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_CXX_FLAGS}")
ENDIF()  

#add_executable(trt_simulator trt_sim.cu)
add_executable(libtorch_simulator libtorch_sim.cu)
#add_executable(libtorch_n_simulator libtorch_sim_nGPU.cu)
#add_executable(trt_n_simulator trt_sim_nGPU.cu)

target_include_directories(libtorch_simulator PUBLIC ${CUDA_INCLUDE_DIRS} ${TensorRT_INCLUDE_DIRS})
#target_include_directories(trt_n_simulator PUBLIC ${CUDA_INCLUDE_DIRS} ${TensorRT_INCLUDE_DIRS})
#target_link_libraries(trt_simulator PUBLIC ${OpenMP_CXX_FLAGS} ${CUDA_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${TensorRT_LIBRARIES} ${TORCH_LIBRARIES})
#target_link_libraries(trt_n_simulator PUBLIC ${CUDA_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${TensorRT_LIBRARIES} ${TORCH_LIBRARIES})
target_link_libraries(libtorch_simulator PUBLIC ${CUDA_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${TORCH_LIBRARIES})
#target_link_libraries(libtorch_n_simulator PUBLIC ${OpenMP_CXX_FLAGS} ${CUDA_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${TORCH_LIBRARIES})
